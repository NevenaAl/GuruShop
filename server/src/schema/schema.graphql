scalar JSON
scalar FileUpload

type Query {
    hello: String!
    users: [User!]
    user(_id:String!): UserPayload!
    me: UserPayload!
    categories:  [Category!]
    category(_id:String!) : CategoryPayload!
    products: [Product!]
    product(_id:String!): ProductPayload!
    subcategories:  [Subcategory!]
    subcategory(_id:String!) : SubcategoryPayload!
    questions: [Question!]
    question(_id: String!) : QuestionPayload!
    reviews: [Review!]
}

type Mutation {
    createUser(data: CreateUserInput!) : UserPayload!
    updateUser(data: UpdateUserInput!) : UserPayload!
    deleteUser(_id: String!) : UserPayload!
    logInUser(data: LogInUserInput!) : LogInPayload!

    createCategory(data: CreateCategoryInput!) : CategoryPayload!
    updateCategory(data: UpdateCategoryInput!) : CategoryPayload!
    deleteCategory(_id:String!) : CategoryPayload!

    createSubcategory(data: CreateSubcategoryInput!) : SubcategoryPayload!
    updateSubcategory(data: UpdateSubcategoryInput!) : SubcategoryPayload!
    deleteSubcategory(_id:String!) : SubcategoryPayload!

    createProduct(data: CreateProductInput!) : ProductPayload!
    updateProduct(data: UpdateProductInput!) :  ProductPayload!
    deleteProduct(_id:String!) : ProductPayload!

    createQuestion(data: CreateQuestionInput!) : QuestionPayload!
    updateQuestion(data: UpdateQuestionInput!) : QuestionPayload!
    deleteQuestion(_id:String!) : QuestionPayload!

    createReview(data: CreateReviewInput!): ReviewPayload!
    deleteReview(_id:String!): ReviewPayload!
}

type Subscription{
    message: SubscriptionPayload
}

type SubscriptionPayload{
    mutation: String
    data: Question
}

input CreateUserInput{
    name: String!
    surrname: String!
    email: String!
    password: String!
}

input UpdateUserInput{
    _id: String!
    name: String
    surrname: String
    email: String
    password: String
    role: String
}

input LogInUserInput {
     email: String!
     password: String!
}

input CreateCategoryInput{
    name: String!
    image: FileUpload!
}

input UpdateCategoryInput{
    _id: String!
    name: String
    image: FileUpload
}

input CreateSubcategoryInput{
    name: String!
    image: FileUpload!
    category_id: String!
}

input UpdateSubcategoryInput{
    _id: String!
    name: String
    image: FileUpload
    category_id: String
}

input CreateProductInput{
    name: String!
    image: [FileUpload!]
    price: Float!
    description: String!
    discount: Float!
    amount: Int!
    additionalInfo: JSON
    subcategory_id: String!
}

input UpdateProductInput{
    _id: String!
    name: String
    newImages: [FileUpload]
    deletedImages: String
    price: Float
    description: String
    discount: Float
    amount: Int
    additionalInfo: JSON
    subcategory_id: String
}

input CreateReviewInput{
    rate: Float!
    comment: String!
    product_id:  String!
}

input CreateQuestionInput {
    message: String!
    product_id: String!
}

input UpdateQuestionInput {
    _id: String!
    answer: JSON
}

type UsersPayload {
    usersPayload: [User!]
    errors: [Error!]
}

type UserPayload {
    userPayload: User
    errors: [Error!]
}

type LogInPayload{
    userPayload: User
    errors: [Error!]
    token: String
}

type CategoryPayload{
    categoryPayload: Category
    errors: [Error!]
}

type CategoriesPayload{
    categoriesPayload: [Category!]
    errors: [Error!]
}

type SubcategoryPayload{
    subcategoryPayload: Subcategory
    errors: [Error!]
}

type SubcategoriesPayload{
    subcategoriesPayload: [Subcategory!]
    errors: [Error!]
}

type ProductsPayload{
    productsPayload: [Product!]
    errors: [Error!]
}

type ProductPayload{
    productPayload: Product
    errors: [Error!]
}

type Error {
    path: String!
    message: String!
}

type QuestionPayload{
    questionPayload: Question
    errors: [Error!]
}

type ReviewPayload{
    reviewPayload: Review
    errors: [Error!]
}

type User{
    _id: String!
    name: String!
    surrname: String!
    email: String!
    password: String!
    products: [Product!]
    isMailConfirmed: Boolean!
    role: String!
}

type Category{
    _id: String!
    name: String!
    image: String!
    subcategories: [Subcategory!]
    products: [Product!]
}

type Subcategory{
    _id: String!
    name: String!
    image: String!
    category: Category!
    products: [Product!]
}

type Product{
    _id: String!
    name: String!
    image: String!
    price: Float!
    description: String!
    discount: Float!
    amount: Float!
    averageRate: Float!
    reviews: [Review!]
    additionalInfo: JSON
    user: User!
    category: Category!
    subcategory: Subcategory!
    questions: [Question!]
}

type Question{
    _id: String!
    message: String!
    author: String!
    answers: JSON!
    product: Product!
}

type Review{
    _id: String!
    author: String!
    rate: Float!
    comment: String!
    product: Product!
}

schema {
    query: Query
    mutation: Mutation
    subscription: Subscription
}
